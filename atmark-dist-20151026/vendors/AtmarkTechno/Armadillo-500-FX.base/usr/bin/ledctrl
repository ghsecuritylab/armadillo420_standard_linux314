#!/bin/sh

LED_BLINK_DELAY=200
AVAIL_TARGETS="status"

SAVE_PREFIX="/tmp/ledctrl_pre_stat_"

save_led_status()
{
cat > ${SAVE_PREFIX}${1} <<EOF
DELAY_ON=`cat /sys/class/leds/$1/delay_on`
DELAY_OFF=`cat /sys/class/leds/$1/delay_off`
BRIGHTNESS=`cat /sys/class/leds/$1/brightness`
EOF
}

load_led_status()
{
	if [ -f ${SAVE_PREFIX}${1} ]; then
		. ${SAVE_PREFIX}${1}
		rm -f ${SAVE_PREFIX}${1}
	else
		return 1
	fi
}

led_set_status()
{
	echo $2 > /sys/class/leds/$1/$3
	check=`cat /sys/class/leds/$1/$3`
	if [ "$2" != "$check" ]; then
		echo "error: failed to set $1 led"
	fi
}

led_off()
{
	rm -f ${SAVE_PREFIX}${1}
	led_set_status $1 0 brightness
}

led_on()
{
	rm -f ${SAVE_PREFIX}${1}
	led_set_status $1 0 delay_on
	led_set_status $1 0 delay_off
	led_set_status $1 1 brightness	
}

led_blink_on()
{
	save_led_status $1

	if [ "$2" ]; then
		delay=`printf "%d" $2 2>/dev/null`
	else
		delay=$LED_BLINK_DELAY
	fi
	led_set_status $1 $delay delay_on
	led_set_status $1 $delay delay_off
}

led_blink_off()
{
	load_led_status $1
	if [ $? = 1 ]; then
		return 0;
	fi
	if [ "$DELAY_ON" = "0" ] && \
	   [ "$DELAY_OFF" = "0" ]; then
		led_set_status $1 0 delay_on
		led_set_status $1 0 delay_off
		led_set_status $1 $BRIGHTNESS brightness
	else
		led_set_status $1 $DELAY_ON delay_on
		led_set_status $1 $DELAY_OFF delay_off
	fi
}

status_init=0
led_status()
{
	DELAY_ON=`cat /sys/class/leds/$1/delay_on`
	DELAY_OFF=`cat /sys/class/leds/$1/delay_off`
	BRIGHTNESS=`cat /sys/class/leds/$1/brightness`
	[ "$status_init" = "0" ] && 
	printf "\tbrightness  delay_on  delay_off\n" && 
	status_init=$(($status_init+1))
	printf "$1\t%10d  %8d  %9d\n" $DELAY_ON $DELAY_OFF $BRIGHTNESS 
}

ensure_trigger_is_timer()
{
	if [ ! -f "/sys/class/leds/$1/delay_on" ]; then
		echo "timer" > "/sys/class/leds/$1/trigger"
	fi
}

usage() {
cat <<EOF
Usage: $0 ledname [command]
Control LEDs.

LED names:

	Available led names: $AVAIL_TARGETS

	Separate multiple entries with a comma,	ie ledname[,ledname,...]
	or specify "all" for all leds

Commands:

	on                : turn led(s) on
	off               : turn led(s) off 
	blink_on [delay]  : blink led(s) every "delay" msecs
	blink_off         : stop blinking leds (and return to previous state)
	status            : show current led status

Example usage:

	$0 led1 status

EOF
}

#
# main
#
targets=
for led in `echo $1 | sed -e "s/,/ /g"`; do
	if [ "$led" = "all" ]; then
		targets=$AVAIL_TARGETS
		break;
	fi

	for type in $AVAIL_TARGETS; do
		if [ "$led" = "$type" ]; then
			targets="$targets $led"
		fi
	done
done

if [ "$targets" = "" ]; then
	usage
	exit 1
fi

mode=$2

for target in $targets; do
	if [ ! -d "/sys/class/leds/$target" ]; then
		echo "error: $target led does not exist"
		exit 1
	fi
	ensure_trigger_is_timer $target
	case $mode in
	on)
		led_on $target
		;;
	off)
		led_off $target
		;;
	blink_on)
		led_blink_on $target $3
		;;
	blink_off)
		led_blink_off $target $3
		;;
	status | *)
		led_status $target
		;;
	esac
done

exit 0

