#! /bin/sh /usr/share/dpatch/dpatch-run
## 40_pgrep-coption.dpatch by  <csmall@localhost.localdomain>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP:  c option for pgrep for counting number of matched proceesses

@DPATCH@
diff -urNad procps-3.2.7~/pgrep.1 procps-3.2.7/pgrep.1
--- procps-3.2.7~/pgrep.1	2006-06-29 09:04:01.000000000 +1000
+++ procps-3.2.7/pgrep.1	2006-06-29 09:35:51.000000000 +1000
@@ -41,6 +41,9 @@
 \-c
 Suppress normal output; instead print a count of matching processes.
 .TP
+\-c
+Suppress normal output; instead print a count of matching processes.
+.TP
 \-d \fIdelimiter\fP
 Sets the string used to delimit each process ID in the output (by
 default a newline).  (\fBpgrep\fP only.)
diff -urNad procps-3.2.7~/pgrep.c procps-3.2.7/pgrep.c
--- procps-3.2.7~/pgrep.c	2006-06-29 09:35:51.000000000 +1000
+++ procps-3.2.7/pgrep.c	2006-06-29 10:02:27.000000000 +1000
@@ -54,6 +54,7 @@
 static int opt_newest = 0;
 static int opt_negate = 0;
 static int opt_exact = 0;
+static int opt_count = 0;
 static int opt_signal = SIGTERM;
 static int opt_lock = 0;
 static int opt_case = 0;
@@ -77,7 +78,7 @@
 	if (i_am_pkill)
 		fprintf (stderr, "Usage: pkill [-SIGNAL] [-fvx] ");
 	else
-		fprintf (stderr, "Usage: pgrep [-flvx] [-d DELIM] ");
+		fprintf (stderr, "Usage: pgrep [-cflvx] [-d DELIM] ");
 	fprintf (stderr, "[-n|-o] [-P PPIDLIST] [-g PGRPLIST] [-s SIDLIST]\n"
 		 "\t[-u EUIDLIST] [-U UIDLIST] [-G GIDLIST] [-t TERMLIST] "
 		 "[PATTERN]\n");
@@ -562,7 +563,7 @@
 		strcat (opts, "ld:");
 	}
 			
-	strcat (opts, "LF:fnovxP:g:s:u:U:G:t:?V");
+	strcat (opts, "LF:cfnovxP:g:s:u:U:G:t:?V");
 	
 	while ((opt = getopt (argc, argv, opts)) != -1) {
 		switch (opt) {
@@ -610,6 +611,9 @@
 			exit(EXIT_SUCCESS);
 //		case 'c':   // Solaris: match by contract ID
 //			break;
+        case 'c':
+            opt_count = 1;
+            break;
 		case 'd':   // Solaris: change the delimiter
 			opt_delim = strdup (optarg);
 			break;
@@ -721,10 +725,14 @@
 				 procs[i].num, strerror (errno));
 		}
 	} else {
-		if (opt_long)
-			output_strlist(procs,num);
-		else
-			output_numlist(procs,num);
+		if (opt_count) {
+			fprintf(stdout, "%ld\n", num);
+		} else {
+			if (opt_long)
+				output_strlist (procs,num);
+			else
+				output_numlist (procs,num);
+		}
 	}
 	return !num; // exit(EXIT_SUCCESS) if match, otherwise exit(EXIT_FAILURE)
 }
