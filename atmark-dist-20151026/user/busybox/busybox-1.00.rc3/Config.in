if [ "$CONFIG_USER_BUSYBOX_BUSYBOX" = "y" ]; then
	comment "Applets"
	bool 'addgroup' CONFIG_USER_BUSYBOX_ADDGROUP
	bool 'adduser' CONFIG_USER_BUSYBOX_ADDUSER
	bool 'adjtimex' CONFIG_USER_BUSYBOX_ADJTIMEX
	bool 'ar' CONFIG_USER_BUSYBOX_AR
	if [ "$CONFIG_USER_BUSYBOX_AR" = "y" ]; then
		bool "ar: Enable support for long filenames (not needed for debs)" CONFIG_USER_BUSYBOX_AR_LONG_FILENAMES
	fi
	bool 'arping' CONFIG_USER_BUSYBOX_ARPING
	bool 'awk' CONFIG_USER_BUSYBOX_AWK
	if [ "$CONFIG_USER_BUSYBOX_AWK" = "y" ]; then
		bool 'awk: Enable math functions (requires libm)' CONFIG_USER_BUSYBOX_AWK_MATH
	fi
	bool 'basename' CONFIG_USER_BUSYBOX_BASENAME
	bool 'bunzip2' CONFIG_USER_BUSYBOX_BUNZIP2
	bool 'cal' CONFIG_USER_BUSYBOX_CAL
	bool 'cat' CONFIG_USER_BUSYBOX_CAT
	bool 'chgrp' CONFIG_USER_BUSYBOX_CHGRP
	bool 'chmod' CONFIG_USER_BUSYBOX_CHMOD
	bool 'chown' CONFIG_USER_BUSYBOX_CHOWN
	bool 'chroot' CONFIG_USER_BUSYBOX_CHROOT
	bool 'chvt' CONFIG_USER_BUSYBOX_CHVT
	bool 'clear' CONFIG_USER_BUSYBOX_CLEAR
	bool 'cmp' CONFIG_USER_BUSYBOX_CMP
	bool 'cp' CONFIG_USER_BUSYBOX_CP
	if [ "$CONFIG_USER_BUSYBOX_CP" = "y" -o "$CONFIG_USER_BUSYBOX_MV" = "y" ]; then
		bool 'cp: Preserve hard links' CONFIG_USER_BUSYBOX_PRESERVE_HARDLINKS
	fi
	bool 'cpio' CONFIG_USER_BUSYBOX_CPIO
	bool 'crond' CONFIG_USER_BUSYBOX_CROND
	if [ "$CONFIG_USER_BUSYBOX_CROND" = "y" ]; then
		bool 'crond: Using /usr/sbin/sendmail?' CONFIG_USER_BUSYBOX_CROND_CALL_SENDMAIL
	fi
	bool 'crontab' CONFIG_USER_BUSYBOX_CRONTAB
	bool 'cut' CONFIG_USER_BUSYBOX_CUT
	bool 'date' CONFIG_USER_BUSYBOX_DATE
	if [ "$CONFIG_USER_BUSYBOX_DATE" = "y" ]; then
		bool 'date: Enable ISO date format output (-I)' CONFIG_USER_BUSYBOX_DATE_ISOFMT
	fi
	bool 'dc' CONFIG_USER_BUSYBOX_DC
	bool 'dd' CONFIG_USER_BUSYBOX_DD
	bool 'deallocvt' CONFIG_USER_BUSYBOX_DEALLOCVT
	bool 'delgroup' CONFIG_USER_BUSYBOX_DELGROUP
	bool 'deluser' CONFIG_USER_BUSYBOX_DELUSER
	bool 'devfsd' CONFIG_USER_BUSYBOX_DEVFSD
	if [ "$CONFIG_USER_BUSYBOX_DEVFSD" = "y" ]; then
		bool 'devfsd: Enables the -fg and -np options' CONFIG_USER_BUSYBOX_DEVFSD_FG_NP
		bool 'devfsd: Adds support for MODLOAD keyword in devsfd.conf' CONFIG_USER_BUSYBOX_DEVFSD_MODLOAD
		bool 'devfsd: Increases logging (and size)' CONFIG_USER_BUSYBOX_DEVFSD_VERBOSE
	fi
	bool 'df' CONFIG_USER_BUSYBOX_DF
	bool 'dirname' CONFIG_USER_BUSYBOX_DIRNAME
	bool 'dmesg' CONFIG_USER_BUSYBOX_DMESG
	bool 'dos2unix' CONFIG_USER_BUSYBOX_DOS2UNIX
	bool 'dpkg' CONFIG_USER_BUSYBOX_DPKG
	bool 'dpkg: deb' CONFIG_USER_BUSYBOX_DPKG_DEB
	if [ "$CONFIG_USER_BUSYBOX_DPKG" = "y" -o "$CONFIG_USER_BUSYBOX_DPKG_DEB" = "y" ]; then
		bool 'dpkg: bzip2 debian packages' CONFIG_USER_BUSYBOX_DEB_TAR_BZ2
		bool 'dpkg: gzip debian packages (normal)' CONFIG_USER_BUSYBOX_DEB_TAR_GZ
	fi
	if [ "$CONFIG_USER_BUSYBOX_DPKG_DEB" = "y" ]; then
		bool 'dpkg: extract only (-x)' CONFIG_USER_BUSYBOX_DPKG_DEB_EXTRACT_ONLY
	fi
	bool 'dutmp' CONFIG_USER_BUSYBOX_DUTMP
	bool 'du' CONFIG_USER_BUSYBOX_DU
	if [ "$CONFIG_USER_BUSYBOX_DU" = "y" ]; then
		bool 'du:  Use a default blocksize of 1024 bytes (1K)' CONFIG_USER_BUSYBOX_DU_DEFALT_BLOCKSIZE_1K
	fi
	bool 'dumpkmap' CONFIG_USER_BUSYBOX_DUMPKMAP
	bool 'echo' CONFIG_USER_BUSYBOX_ECHO
	if [ "$CONFIG_USER_BUSYBOX_ECHO" = "y" ]; then
		bool 'echo: fancy' CONFIG_USER_BUSYBOX_FANCY_ECHO
	fi
	bool 'env' CONFIG_USER_BUSYBOX_ENV
	bool 'expr' CONFIG_USER_BUSYBOX_EXPR
	bool 'fbset' CONFIG_USER_BUSYBOX_FBSET
	if [ "$CONFIG_USER_BUSYBOX_FBSET" = "y" ]; then
		bool 'fbset: fancy options' CONFIG_USER_BUSYBOX_FBSET_FANCY
		bool 'fbset: readmode' CONFIG_USER_BUSYBOX_FBSET_READMODE
	fi
	bool 'fdflush' CONFIG_USER_BUSYBOX_FDFLUSH
	bool 'fdformat' CONFIG_USER_BUSYBOX_FDFORMAT
	bool 'fdisk' CONFIG_USER_BUSYBOX_FDISK
	if [ "$CONFIG_USER_BUSYBOX_FDISK" = "y" ]; then
		bool 'fdisk: support over 4GB disks' CONFIG_USER_BUSYBOX_FDISK_SUPPORT_LARGE_DISKS
		bool 'fdisk: Write support' CONFIG_USER_BUSYBOX_FDISK_WRITABLE
		if [ "$CONFIG_USER_BUSYBOX_FDISK_WRITABLE" = "y" ]; then
			bool 'fdisk: Support AIX disklabels' CONFIG_USER_BUSYBOX_AIX_LABEL
			bool 'fdisk: Support expert mode' CONFIG_USER_BUSYBOX_FDISK_ADVANCED
			bool 'fdisk: Support BSD disklabels' CONFIG_USER_BUSYBOX_OSF_LABEL
			bool 'fdisk: Support SGI disklabels' CONFIG_USER_BUSYBOX_SGI_LABEL
			bool 'fdisk: Support SUN disklabels' CONFIG_USER_BUSYBOX_SUN_LABEL
		fi
	fi
	bool 'find' CONFIG_USER_BUSYBOX_FIND
	if [ "$CONFIG_USER_BUSYBOX_FIND" = "y" ]; then
		bool 'find: -type' CONFIG_USER_BUSYBOX_FIND_TYPE
		bool 'find: -perm' CONFIG_USER_BUSYBOX_FIND_PERM
		bool 'find: -mtime' CONFIG_USER_BUSYBOX_FIND_MTIME
		bool 'find: -newer' CONFIG_USER_BUSYBOX_FIND_NEWER
		bool 'find: Enable inode number matching (-inum) option' CONFIG_USER_BUSYBOX_FIND_INUM
		bool 'find: Enable stay in filesystem (-xdev) option' CONFIG_USER_BUSYBOX_FIND_XDEV
	fi
	bool 'fold' CONFIG_USER_BUSYBOX_FOLD
	bool 'free' CONFIG_USER_BUSYBOX_FREE
	bool 'freeramdisk' CONFIG_USER_BUSYBOX_FREERAMDISK
	bool 'fsck_minix' CONFIG_USER_BUSYBOX_FSCK_MINIX
	bool 'ftpget' CONFIG_USER_BUSYBOX_FTPGET
	bool 'ftpput' CONFIG_USER_BUSYBOX_FTPPUT
	bool 'getopt' CONFIG_USER_BUSYBOX_GETOPT
	bool 'getty' CONFIG_USER_BUSYBOX_GETTY
	bool 'grep' CONFIG_USER_BUSYBOX_GREP
	if [ "$CONFIG_USER_BUSYBOX_GREP" = "y" ]; then
		bool 'grep: enable context' CONFIG_USER_BUSYBOX_GREP_CONTEXT
		bool 'grep: Alias egrep to grep -e' CONFIG_USER_BUSYBOX_GREP_EGREP_ALIAS
		bool 'grep: Alias fgrep to grep -f' CONFIG_USER_BUSYBOX_GREP_FGREP_ALIAS
	fi
	bool 'gunzip' CONFIG_USER_BUSYBOX_GUNZIP
	if [ "$CONFIG_USER_BUSYBOX_GUNZIP" = "y" ]; then
		bool 'gunzip: Uncompress support' CONFIG_USER_BUSYBOX_GUNZIP_UNCOMPRESS
	fi
	bool 'gzip' CONFIG_USER_BUSYBOX_GZIP
	bool 'halt' CONFIG_USER_BUSYBOX_HALT
	bool 'hdparm' CONFIG_USER_BUSYBOX_HDPARM
	if [ "$CONFIG_USER_BUSYBOX_HDPARM" = "y" ]; then
		bool 'hdparm: get identity' CONFIG_USER_BUSYBOX_HDPARM_GET_IDENTITY
		bool 'hdparm: scan hwif' CONFIG_USER_BUSYBOX_HDPARM_HDIO_SCAN_HWIF
		bool 'hdparm: unregister hwif' CONFIG_USER_BUSYBOX_HDPARM_HDIO_UNREGISTER_HWIF
		bool 'hdparm: drive reset' CONFIG_USER_BUSYBOX_HDPARM_HDIO_DRIVE_RESET
		bool 'hdparm: tristate hwif' CONFIG_USER_BUSYBOX_HDPARM_HDIO_TRISTATE_HWIF
		bool 'hdparm: get/set dma' CONFIG_USER_BUSYBOX_HDPARM_HDIO_GETSET_DMA
	fi
	bool 'head' CONFIG_USER_BUSYBOX_HEAD
	if [ "$CONFIG_USER_BUSYBOX_HEAD" = "y" ]; then
		bool 'head: Enable head options (-c, -q, and -v)' CONFIG_USER_BUSYBOX_FANCY_HEAD
	fi
	bool 'hexdump' CONFIG_USER_BUSYBOX_HEXDUMP
	bool 'hostid' CONFIG_USER_BUSYBOX_HOSTID
	bool 'hostname' CONFIG_USER_BUSYBOX_HOSTNAME
	bool 'httpd' CONFIG_USER_BUSYBOX_HTTPD
	if [ "$CONFIG_USER_BUSYBOX_HTTPD" = "y" ]; then
		bool 'httpd: Enable Basic http Authentication' CONFIG_USER_BUSYBOX_HTTPD_BASIC_AUTH
		if [ "$CONFIG_USER_BUSYBOX_HTTPD_BASIC_AUTH" = "y" ]; then
			bool 'httpd: Support MD5 crypted passwords for http Authentication' CONFIG_USER_BUSYBOX_HTTPD_AUTH_MD5
		fi
		bool 'httpd: Support Common Gateway Interface (CGI)' CONFIG_USER_BUSYBOX_HTTPD_CGI
		if [ "$CONFIG_USER_BUSYBOX_HTTPD_CGI" = "y" ]; then
			bool '  Support the REMOTE_PORT environment variable for CGI' CONFIG_USER_BUSYBOX_HTTPD_SET_REMOTE_PORT_TO_ENV
		fi
		bool 'httpd: Support loading additional MIME types at run-time' CONFIG_USER_BUSYBOX_HTTPD_CONFIG_WITH_MIME_TYPES
		bool 'httpd: Enable the -e option for shell script CGI simplification.' CONFIG_USER_BUSYBOX_HTTPD_ENCODE_URL_STR
		bool 'httpd: Support reloading the global config file using hup signal' CONFIG_USER_BUSYBOX_HTTPD_RELOAD_CONFIG_SIGHUP
		bool 'httpd: Enable support -u <user> option' CONFIG_USER_BUSYBOX_HTTPD_SETUID
		bool 'httpd: Support using httpd only from inetd' CONFIG_USER_BUSYBOX_HTTPD_USAGE_FROM_INETD_ONLY
	fi
	bool 'hwclock' CONFIG_USER_BUSYBOX_HWCLOCK
	if [ "$CONFIG_USER_BUSYBOX_HWCLOCK" = "y" ]; then
		bool 'hwclock: Support long options (--hctosys,...)' CONFIG_USER_BUSYBOX_HWCLOCK_LONGOPTIONS
	fi
	bool 'id' CONFIG_USER_BUSYBOX_ID
	bool 'ifconfig' CONFIG_USER_BUSYBOX_IFCONFIG
	if [ "$CONFIG_USER_BUSYBOX_IFCONFIG" = "y" ]; then
		bool 'ifconfig: status reporting' CONFIG_USER_BUSYBOX_IFCONFIG_STATUS
		bool 'ifconfig: slip' CONFIG_USER_BUSYBOX_IFCONFIG_SLIP
		bool 'ifconfig: enable hw option' CONFIG_USER_BUSYBOX_IFCONFIG_HW
		bool 'ifconfig: extra options' CONFIG_USER_BUSYBOX_IFCONFIG_MEMSTART_IOADDR_IRQ
		bool 'ifconfig: Set the broadcast automatically' CONFIG_USER_BUSYBOX_IFCONFIG_BROADCAST_PLUS
	fi
	bool 'ifupdown' CONFIG_USER_BUSYBOX_IFUPDOWN
	if [ "$CONFIG_USER_BUSYBOX_IFUPDOWN" = "y" ]; then
		bool 'ifupdown: use ip' CONFIG_USER_BUSYBOX_IFUPDOWN_IP
		bool 'ifupdown: use built-in ip' CONFIG_USER_BUSYBOX_IFUPDOWN_IP_BUILTIN
		bool 'ifupdown: enable ipv4' CONFIG_USER_BUSYBOX_IFUPDOWN_IPV4
		bool 'ifupdown: enable ipv6' CONFIG_USER_BUSYBOX_IFUPDOWN_IPV6
		bool 'ifupdown: enable ipx' CONFIG_USER_BUSYBOX_IFUPDOWN_IPX
		bool 'ifupdown: enable mapping' CONFIG_USER_BUSYBOX_IFUPDOWN_MAPPING
		if [ "$CONFIG_USER_FLATFSD_FLATFSD" = "y" ]; then
			bool 'ifupdown: reference /etc/config/interfaces' CONFIG_USER_BUSYBOX_IFUPDOWN_FLATFSD
		fi
	fi
	bool 'inetd' CONFIG_USER_BUSYBOX_INETD
	if [ "$CONFIG_USER_BUSYBOX_INETD" = "y" ]; then
		bool 'inetd: Support chargen service' CONFIG_USER_BUSYBOX_INETD_SUPPORT_BILTIN_CHARGEN
		bool 'inetd: Support daytime service' CONFIG_USER_BUSYBOX_INETD_SUPPORT_BILTIN_DAYTIME
		bool 'inetd: Support discard service' CONFIG_USER_BUSYBOX_INETD_SUPPORT_BILTIN_DISCARD
		bool 'inetd: Support echo service' CONFIG_USER_BUSYBOX_INETD_SUPPORT_BILTIN_ECHO
		bool 'inetd: Support time service' CONFIG_USER_BUSYBOX_INETD_SUPPORT_BILTIN_TIME
	fi
	bool 'init' CONFIG_USER_BUSYBOX_INIT
	if [ "$CONFIG_USER_BUSYBOX_INIT" = "y" ]; then
		bool 'init: use inittab' CONFIG_USER_BUSYBOX_USE_INITTAB
		bool 'init: /linuxrc' CONFIG_USER_BUSYBOX_LINUXRC
		bool 'init: core dumps' CONFIG_USER_BUSYBOX_INIT_COREDUMPS
		bool 'init: support running init from within an initrd?' CONFIG_USER_BUSYBOX_INITRD
		bool 'init: disable log' CONFIG_USER_BUSYBOX_INIT_DISABLE_LOG
	fi
	bool 'insmod' CONFIG_USER_BUSYBOX_INSMOD
	bool 'insmod: lsmod' CONFIG_USER_BUSYBOX_LSMOD
	bool 'insmod: modprobe' CONFIG_USER_BUSYBOX_MODPROBE
	bool 'insmod: rmmod' CONFIG_USER_BUSYBOX_RMMOD
	bool 'insmod: Pre 2.1 kernel modules' CONFIG_USER_BUSYBOX_2_2_MODULES
	bool 'insmod: 2.1 - 2.4 kernel modules' CONFIG_USER_BUSYBOX_2_4_MODULES
	bool 'insmod: 2.6 and above kernel modules' CONFIG_USER_BUSYBOX_2_6_MODULES
	bool 'insmod: Model version checks' CONFIG_USER_BUSYBOX_INSMOD_VERSION_CHECKING
	if [ "$CONFIG_USER_BUSYBOX_INSMOD" = "y" -o "$CONFIG_USER_BUSYBOX_LSMOD" = "y" ]; then
		bool 'insmod: Support tainted module checking with new kernels' CONFIG_USER_BUSYBOX_CHECK_TAINTED_MODULE
	fi
	if [ "$CONFIG_USER_BUSYBOX_INSMOD" = "y" ]; then
		bool 'insmod: load in kernel memory' CONFIG_USER_BUSYBOX_INSMOD_LOADINKMEM
		if [ "$CONFIG_USER_BUSYBOX_2_4_MODULES" = "y" ]; then
			bool 'insmod: Add module symbols to kernel symbol table' CONFIG_USER_BUSYBOX_INSMOD_KSYMOOPS_SYMBOLS
			bool 'insmod: Enable load map (-m) option' CONFIG_USER_BUSYBOX_INSMOD_LOAD_MAP
			if [ "$CONFIG_USER_BUSYBOX_INSMOD_LOAD_MAP" = "y" ]; then
				bool 'insmod: Symbols in load map' CONFIG_USER_BUSYBOX_INSMOD_LOAD_MAP_FULL
			fi
		fi
	fi
	bool 'ip' CONFIG_USER_BUSYBOX_IP
	bool 'ipaddr' CONFIG_USER_BUSYBOX_IPADDR
	bool 'ipcalc' CONFIG_USER_BUSYBOX_IPCALC
	if [ "$CONFIG_USER_BUSYBOX_IPCALC" = "y" ]; then
		bool 'ipcalc: fancy' CONFIG_USER_BUSYBOX_IPCALC_FANCY
	fi
	bool 'iplink' CONFIG_USER_BUSYBOX_IPLINK
	bool 'iproute' CONFIG_USER_BUSYBOX_IPROUTE
	bool 'iptunnel' CONFIG_USER_BUSYBOX_IPTUNNEL
	bool 'kill' CONFIG_USER_BUSYBOX_KILL
	bool 'killall' CONFIG_USER_BUSYBOX_KILLALL
	bool 'klogd' CONFIG_USER_BUSYBOX_KLOGD
	bool 'length' CONFIG_USER_BUSYBOX_LENGTH
	bool 'last' CONFIG_USER_BUSYBOX_LAST
	bool 'ln' CONFIG_USER_BUSYBOX_LN
	bool 'loadacm' CONFIG_USER_BUSYBOX_LOADACM
	bool 'loadfont' CONFIG_USER_BUSYBOX_LOADFONT
	bool 'loadkmap' CONFIG_USER_BUSYBOX_LOADKMAP
	bool 'logger' CONFIG_USER_BUSYBOX_LOGGER
	bool 'login' CONFIG_USER_BUSYBOX_LOGIN
	if [ "$CONFIG_USER_BUSYBOX_LOGIN" = "y" ]; then
		bool 'login: Support for /etc/securetty' CONFIG_USER_BUSYBOX_SECURETTY
	fi
	bool 'logname' CONFIG_USER_BUSYBOX_LOGNAME
	bool 'logread' CONFIG_USER_BUSYBOX_LOGREAD
	if [ "$CONFIG_USER_BUSYBOX_LOGREAD" = "y" ]; then
		bool 'logread: logread double buffering' CONFIG_USER_BUSYBOX_LOGREAD_REDUCED_LOCKING
	fi
	bool 'losetup' CONFIG_USER_BUSYBOX_LOSETUP
	bool 'ls' CONFIG_USER_BUSYBOX_LS
	if [ "$CONFIG_USER_BUSYBOX_LS" = "y" ]; then
		bool 'ls: show usernames' CONFIG_USER_BUSYBOX_LS_USERNAME
		bool 'ls: show timestamps' CONFIG_USER_BUSYBOX_LS_TIMESTAMPS
		bool 'ls: file types' CONFIG_USER_BUSYBOX_LS_FILETYPES
		bool 'ls: sort files' CONFIG_USER_BUSYBOX_LS_SORTFILES
		bool 'ls: recursive' CONFIG_USER_BUSYBOX_LS_RECURSIVE
		bool 'ls: follow links' CONFIG_USER_BUSYBOX_LS_FOLLOWLINKS
		bool 'ls: Use color to identify file types' CONFIG_USER_BUSYBOX_LS_COLOR
	fi
	bool 'makedevs' CONFIG_USER_BUSYBOX_MAKEDEVS
	bool 'md5sum' CONFIG_USER_BUSYBOX_MD5SUM
	if [ "$CONFIG_USER_BUSYBOX_MD5SUM" = "y" -o "$CONFIG_USER_BUSYBOX_SHA1SUM" = "y" ]; then
		bool 'md5: Enable -c, -s and -w options' CONFIG_USER_BUSYBOX_MD5_SHA1_SUM_CHECK
	fi
	bool 'mesg' CONFIG_USER_BUSYBOX_MESG
	bool 'mkdir' CONFIG_USER_BUSYBOX_MKDIR
	bool 'mkfifo' CONFIG_USER_BUSYBOX_MKFIFO
	bool 'mkfs_minix' CONFIG_USER_BUSYBOX_MKFS_MINIX
	bool 'mknod' CONFIG_USER_BUSYBOX_MKNOD
	bool 'mkswap' CONFIG_USER_BUSYBOX_MKSWAP
	bool 'mktemp' CONFIG_USER_BUSYBOX_MKTEMP
	bool 'more' CONFIG_USER_BUSYBOX_MORE
	if [ "$CONFIG_USER_BUSYBOX_MORE" = "y" ]; then
		bool 'more: use termios' CONFIG_USER_BUSYBOX_USE_TERMIOS
	fi
	bool 'mount' CONFIG_USER_BUSYBOX_MOUNT
	if [ "$CONFIG_USER_BUSYBOX_MOUNT" = "y" ]; then
		bool 'mount: loop devices' CONFIG_USER_BUSYBOX_MOUNT_LOOP
		bool 'mount: support /etc/mtab' CONFIG_USER_BUSYBOX_MTAB_SUPPORT
		if [ "$CONFIG_USER_BUSYBOX_MTAB_SUPPORT" = "y" ]; then
			string 'mount: mtab file name' CONFIG_USER_BUSYBOX_MTAB_FILENAME '/etc/mtab'
                fi
		bool 'mount: support NFS mounts' CONFIG_USER_BUSYBOX_NFSMOUNT
	fi
	bool 'mt' CONFIG_USER_BUSYBOX_MT
	bool 'mv' CONFIG_USER_BUSYBOX_MV
	bool 'nameif' CONFIG_USER_BUSYBOX_NAMEIF
	bool 'nc' CONFIG_USER_BUSYBOX_NC
	bool 'netstat' CONFIG_USER_BUSYBOX_NETSTAT
	bool 'nslookup' CONFIG_USER_BUSYBOX_NSLOOKUP
	bool 'od' CONFIG_USER_BUSYBOX_OD
	bool 'openvt' CONFIG_USER_BUSYBOX_OPENVT
	bool 'passwd' CONFIG_USER_BUSYBOX_PASSWD
	bool 'patch' CONFIG_USER_BUSYBOX_PATCH
	bool 'pidof' CONFIG_USER_BUSYBOX_PIDOF
	bool 'ping' CONFIG_USER_BUSYBOX_PING
	if [ "$CONFIG_USER_BUSYBOX_PING" = "y" ]; then
		bool 'ping: fancy' CONFIG_USER_BUSYBOX_FANCY_PING
		bool 'ping: Enable fancy ping6 output' CONFIG_USER_BUSYBOX_FANCY_PING6
	fi
	bool 'ping6' CONFIG_USER_BUSYBOX_PING6
	bool 'pipe_progress' CONFIG_USER_BUSYBOX_PIPE_PROGRESS
	bool 'pivot_root' CONFIG_USER_BUSYBOX_PIVOT_ROOT
	bool 'poweroff' CONFIG_USER_BUSYBOX_POWEROFF
	bool 'printf' CONFIG_USER_BUSYBOX_PRINTF
	bool 'ps' CONFIG_USER_BUSYBOX_PS
	bool 'pwd' CONFIG_USER_BUSYBOX_PWD
	bool 'rdate' CONFIG_USER_BUSYBOX_RDATE
	bool 'realpath' CONFIG_USER_BUSYBOX_REALPATH
	bool 'readlink' CONFIG_USER_BUSYBOX_READLINK
	bool 'reboot' CONFIG_USER_BUSYBOX_REBOOT
	bool 'renice' CONFIG_USER_BUSYBOX_RENICE
	bool 'reset' CONFIG_USER_BUSYBOX_RESET
	bool 'rm' CONFIG_USER_BUSYBOX_RM
	bool 'rmdir' CONFIG_USER_BUSYBOX_RMDIR
	bool 'route' CONFIG_USER_BUSYBOX_ROUTE
	bool 'rpm2cpio' CONFIG_USER_BUSYBOX_RPM2CPIO
	bool 'run-parts' CONFIG_USER_BUSYBOX_RUN_PARTS
	bool 'rx' CONFIG_USER_BUSYBOX_RX
	bool 'sed' CONFIG_USER_BUSYBOX_SED
	bool 'seq' CONFIG_USER_BUSYBOX_SEQ
	bool 'setkeycodes' CONFIG_USER_BUSYBOX_SETKEYCODES
	bool 'shell' CONFIG_USER_BUSYBOX_SHELL
	if [ "$CONFIG_USER_BUSYBOX_SHELL" = "y" ]; then
		bool 'ash:  ASH shell' CONFIG_USER_BUSYBOX_ASH
		bool '      ASH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_ASH
		if [ "$CONFIG_USER_BUSYBOX_ASH" = "y" ]; then
			bool '      ASH Enable alias support' CONFIG_USER_BUSYBOX_ASH_ALIAS
			bool '      ASH Enable cmdcmd to override shell builtins' CONFIG_USER_BUSYBOX_ASH_CMDCMD
			bool '      ASH Enable getopt builtin to parse positional parameters' CONFIG_USER_BUSYBOX_ASH_GETOPTS
			bool '      ASH Enable Job control' CONFIG_USER_BUSYBOX_ASH_JOB_CONTROL
			bool '      ASH Check for new mail on interactive shells' CONFIG_USER_BUSYBOX_ASH_MAIL
			bool '      ASH Enable Posix math support' CONFIG_USER_BUSYBOX_ASH_MATH_SUPPORT
			bool '      ASH Extend Posix math support to 64 bit' CONFIG_USER_BUSYBOX_ASH_MATH_SUPPORT_64
			bool '      ASH Optimize for size instead of speed' CONFIG_USER_BUSYBOX_ASH_OPTIMIZE_FOR_SIZE
			bool '      ASH Enable pseudorandom generator and variable \$RANDOM' CONFIG_USER_BUSYBOX_ASH_RANDOM_SUPPORT
		fi
		bool 'hush: HUSH shell' CONFIG_USER_BUSYBOX_HUSH
		bool '      HUSH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_HUSH
		bool 'lash: LASH shell' CONFIG_USER_BUSYBOX_LASH
		bool '      LASH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_LASH
		bool 'msh:  Minix shell' CONFIG_USER_BUSYBOX_MSH
		bool '      MSH is /bin/sh' CONFIG_USER_BUSYBOX_SH_IS_MSH
		bool 'sh: command editing' CONFIG_USER_BUSYBOX_COMMAND_EDITING
		if [ "$CONFIG_USER_BUSYBOX_COMMAND_EDITING" = "y" ]; then
			int 'sh: history size' CONFIG_USER_BUSYBOX_COMMAND_HISTORY 15
			bool 'sh: history saving' CONFIG_USER_BUSYBOX_COMMAND_SAVEHISTORY
			bool 'sh: tab completion' CONFIG_USER_BUSYBOX_COMMAND_TAB_COMPLETION
			if [ "$CONFIG_USER_BUSYBOX_COMMAND_TAB_COMPLETION" = "y" ]; then
				bool 'sh: username completion' CONFIG_USER_BUSYBOX_COMMAND_USERNAME_COMPLETION
			fi
		fi
		bool 'sh: tab completion' CONFIG_USER_BUSYBOX_TAB_COMPLETION
		bool 'sh: username completion' CONFIG_USER_BUSYBOX_USERNAME_COMPLETION
		bool 'sh: stand alone' CONFIG_USER_BUSYBOX_SH_STANDALONE_SHELL
		if [ "$CONFIG_USER_BUSYBOX_SH_STANDALONE_SHELL" = "y" ]; then
			bool 'sh: applets first' CONFIG_USER_BUSYBOX_SH_APPLETS_ALWAYS_WIN
		fi
		bool 'sh: fancy prompt' CONFIG_USER_BUSYBOX_SH_FANCY_PROMPT
		if [ "$CONFIG_USER_BUSYBOX_MSH" = "y" -o "$CONFIG_USER_BUSYBOX_LASH" = "y" -o "$CONFIG_USER_BUSYBOX_HUSH" = "y" -o "$CONFIG_USER_BUSYBOX_ASH" = "y" ]; then
			bool 'sh: Hide message on interactive shell startup' CONFIG_USER_BUSYBOX_SH_EXTRA_QUIET
		fi
	fi
	bool 'sha1sum' CONFIG_USER_BUSYBOX_SHA1SUM
	bool 'sleep' CONFIG_USER_BUSYBOX_SLEEP
	if [ "$CONFIG_USER_BUSYBOX_SLEEP" = "y" ]; then
		bool 'sleep: Enable multiple integer args and optional time suffixes' CONFIG_USER_BUSYBOX_FANCY_SLEEP
	fi
	bool 'sort' CONFIG_USER_BUSYBOX_SORT
	if [ "$CONFIG_USER_BUSYBOX_SORT" = "y" ]; then
		bool 'sort: allow reverse' CONFIG_USER_BUSYBOX_SORT_REVERSE
		bool 'sort: allow unique' CONFIG_USER_BUSYBOX_SORT_UNIQUE
	fi
	bool 'start-stop-daemon' CONFIG_USER_BUSYBOX_START_STOP_DAEMON
	bool 'strings' CONFIG_USER_BUSYBOX_STRINGS
	bool 'stty' CONFIG_USER_BUSYBOX_STTY
	bool 'su' CONFIG_USER_BUSYBOX_SU
	bool 'sulogin' CONFIG_USER_BUSYBOX_SULOGIN
	bool 'swaponoff' CONFIG_USER_BUSYBOX_SWAPONOFF
	bool 'sync' CONFIG_USER_BUSYBOX_SYNC
	bool 'sysctl' CONFIG_USER_BUSYBOX_SYSCTL
	bool 'syslogd' CONFIG_USER_BUSYBOX_SYSLOGD
	if [ "$CONFIG_USER_BUSYBOX_SYSLOGD" = "y" ]; then
		bool 'rotate log files' CONFIG_USER_BUSYBOX_ROTATE_LOGFILE
		bool 'syslogd: -R' CONFIG_USER_BUSYBOX_REMOTE_LOG
		bool 'syslogd: -C' CONFIG_USER_BUSYBOX_IPC_SYSLOG
		if [ "$CONFIG_USER_BUSYBOX_IPC_SYSLOG" = "y" ]; then
			int 'syslogd: buffer size' CONFIG_USER_BUSYBOX_IPC_SYSLOG_BUFFER_SIZE 16
		fi
	fi
	bool 'tail' CONFIG_USER_BUSYBOX_TAIL
	if [ "$CONFIG_USER_BUSYBOX_TAIL" = "y" ]; then
		bool 'tail: fancy' CONFIG_USER_BUSYBOX_FANCY_TAIL
	fi
	bool 'tar' CONFIG_USER_BUSYBOX_TAR
	if [ "$CONFIG_USER_BUSYBOX_TAR" = "y" ]; then
		bool 'tar: allow creation' CONFIG_USER_BUSYBOX_TAR_CREATE
		bool 'tar: allow exclude' CONFIG_USER_BUSYBOX_TAR_EXCLUDE
		bool 'tar: allow gzip' CONFIG_USER_BUSYBOX_TAR_GZIP
		bool 'tar: Enable -j option to handle .tar.bz2 files' CONFIG_USER_BUSYBOX_TAR_BZIP2
		bool 'tar: Enable -Z option' CONFIG_USER_BUSYBOX_TAR_COMPRESS
		bool 'tar: Enable -X (exclude from) and -T (include from) options)' CONFIG_USER_BUSYBOX_TAR_FROM
		bool 'tar: Enable support for some GNU tar extensions' CONFIG_USER_BUSYBOX_TAR_GNU_EXTENSIONS
		bool 'tar: Enable long options' CONFIG_USER_BUSYBOX_TAR_LONG_OPTIONS
		bool 'tar: Enable support for old tar header format' CONFIG_USER_BUSYBOX_TAR_OLDGNU_COMPATABILITY
	fi
	bool 'tee' CONFIG_USER_BUSYBOX_TEE
	if [ "$CONFIG_USER_BUSYBOX_TEE" = "y" ]; then
		bool 'tee: Enable block i/o (larger/faster) instead of byte i/o.' CONFIG_USER_BUSYBOX_TEE_USE_BLOCK_IO
	fi
	bool 'telnet' CONFIG_USER_BUSYBOX_TELNET
	if [ "$CONFIG_USER_BUSYBOX_TELNET" = "y" ]; then
		bool 'telnet: TERM type' CONFIG_USER_BUSYBOX_TELNET_TTYPE
		bool 'telnet: Pass USER type to remote host' CONFIG_USER_BUSYBOX_TELNET_AUTOLOGIN
	fi
	bool 'telnetd' CONFIG_USER_BUSYBOX_TELNETD
	if [ "$CONFIG_USER_BUSYBOX_TELNETD" = "y" ]; then
		bool 'telnetd: Support call from inetd only' CONFIG_USER_BUSYBOX_TELNETD_INETD
	fi
	bool 'test' CONFIG_USER_BUSYBOX_TEST
	if [ "$CONFIG_USER_BUSYBOX_TEST" = "y" ]; then
		bool 'test: Extend test to 64 bit' CONFIG_USER_BUSYBOX_TEST_64
	fi
	bool 'tftp' CONFIG_USER_BUSYBOX_TFTP
	if [ "$CONFIG_USER_BUSYBOX_TFTP" = "y" ]; then
		bool 'tftp: put' CONFIG_USER_BUSYBOX_TFTP_PUT
		bool 'tftp: get' CONFIG_USER_BUSYBOX_TFTP_GET
		bool 'tftp: Enable "blocksize" command' CONFIG_USER_BUSYBOX_TFTP_BLOCKSIZE
		bool 'tftp: Enable debug' CONFIG_USER_BUSYBOX_TFTP_DEBUG
	fi
	bool 'time' CONFIG_USER_BUSYBOX_TIME
	bool 'top' CONFIG_USER_BUSYBOX_TOP
	if [ "$CONFIG_USER_BUSYBOX_TOP" = "y" ]; then
		bool 'top: Support showing CPU usage percentage (add 2k bytes)' CONFIG_USER_BUSYBOX_CPU_USAGE_PERCENTAGE
	fi
	bool 'touch' CONFIG_USER_BUSYBOX_TOUCH
	bool 'tr' CONFIG_USER_BUSYBOX_TR
	bool 'traceroute' CONFIG_USER_BUSYBOX_TRACEROUTE
	if [ "$CONFIG_USER_BUSYBOX_TRACEROUTE" = "y" ]; then
		bool 'traceroute: Enable verbose output' CONFIG_USER_BUSYBOX_TRACEROUTE_VERBOSE
	fi
	bool 'true_false' CONFIG_USER_BUSYBOX_TRUE_FALSE
	bool 'tty' CONFIG_USER_BUSYBOX_TTY
	bool 'udhcp Client (udhcpc)' CONFIG_USER_BUSYBOX_UDHCPC
	bool 'udhcp Server (udhcpd)' CONFIG_USER_BUSYBOX_UDHCPD
	if [ "$CONFIG_USER_BUSYBOX_UDHCPD" = "y" ]; then
		bool 'udhcp: Lease display utility (dumpleases)' CONFIG_USER_BUSYBOX_DUMPLEASES
	fi
	if [ "$CONFIG_USER_BUSYBOX_UDHCPD" = "y" -o "$CONFIG_USER_BUSYBOX_UDHCPC" = "y" ]; then
		bool 'udhcp: Compile udhcp with noisy debugging messages' CONFIG_USER_BUSYBOX_UDHCP_DEBUG
		bool 'udhcp: Log udhcp messages to syslog (instead of stdout)' CONFIG_USER_BUSYBOX_UDHCP_SYSLOG
	fi
	bool 'umount' CONFIG_USER_BUSYBOX_UMOUNT
	if [ "$CONFIG_USER_BUSYBOX_UMOUNT" = "y" ]; then
		bool 'umount: forced unmounts' CONFIG_USER_BUSYBOX_MOUNT_FORCE
	fi
	bool 'uname' CONFIG_USER_BUSYBOX_UNAME
	bool 'uncompress' CONFIG_USER_BUSYBOX_UNCOMPRESS
	bool 'uniq' CONFIG_USER_BUSYBOX_UNIQ
	bool 'unix2dos' CONFIG_USER_BUSYBOX_UNIX2DOS
	bool 'update' CONFIG_USER_BUSYBOX_UPDATE
	bool 'uptime' CONFIG_USER_BUSYBOX_UPTIME
	bool 'usleep' CONFIG_USER_BUSYBOX_USLEEP
	bool 'uudecode' CONFIG_USER_BUSYBOX_UUDECODE
	bool 'uuencode' CONFIG_USER_BUSYBOX_UUENCODE
	bool 'unzip'	CONFIG_USER_BUSYBOX_UNZIP
	bool 'vconfig' CONFIG_USER_BUSYBOX_VCONFIG
	bool 'vi' CONFIG_USER_BUSYBOX_VI
	if [ "$CONFIG_USER_BUSYBOX_VI" = "y" ]; then
		bool 'vi: colon commands' CONFIG_USER_BUSYBOX_VI_COLON
		bool 'vi: yank / put / mark' CONFIG_USER_BUSYBOX_VI_YANKMARK
		bool 'vi: search / replace' CONFIG_USER_BUSYBOX_VI_SEARCH
		bool 'vi: catch signals' CONFIG_USER_BUSYBOX_VI_USE_SIGNALS
		bool 'vi: previous command' CONFIG_USER_BUSYBOX_VI_DOT_CMD
		bool 'vi: enable read only' CONFIG_USER_BUSYBOX_VI_READONLY
		bool 'vi: setable options' CONFIG_USER_BUSYBOX_VI_SETOPTS
		bool 'vi: allow :set' CONFIG_USER_BUSYBOX_VI_SET
		bool 'vi: window resizes' CONFIG_USER_BUSYBOX_VI_WIN_RESIZE
		bool 'vi: Optimize cursor movement' CONFIG_USER_BUSYBOX_VI_OPTIMIZE_CURSOR
	fi
	if [ "$CONFIG_USER_BUSYBOX_ADDUSER" = "y" -o "$CONFIG_USER_BUSYBOX_DELUSER" = "y" -o "$CONFIG_USER_BUSYBOX_LOGIN" = "y" -o "$CONFIG_USER_BUSYBOX_SU" = "y" ]; then
		bool 'vlock' CONFIG_USER_BUSYBOX_VLOCK
	fi
	bool 'watchdog' CONFIG_USER_BUSYBOX_WATCHDOG
	bool 'wc' CONFIG_USER_BUSYBOX_WC
	bool 'wget' CONFIG_USER_BUSYBOX_WGET
	if [ "$CONFIG_USER_BUSYBOX_WGET" = "y" ]; then
		bool 'wget: status bar' CONFIG_USER_BUSYBOX_WGET_STATUSBAR
		bool 'wget: authentication' CONFIG_USER_BUSYBOX_WGET_AUTHENTICATION
		bool 'wget: Enable IPv6 literal addresses' CONFIG_USER_BUSYBOX_WGET_IP6_LITERAL
	fi
	bool 'which' CONFIG_USER_BUSYBOX_WHICH
	bool 'whoami' CONFIG_USER_BUSYBOX_WHOAMI
	bool 'xargs' CONFIG_USER_BUSYBOX_XARGS
	if [ "$CONFIG_USER_BUSYBOX_XARGS" = "y" ]; then
		bool 'xargs: Enable prompt and confirmation option -p' CONFIG_USER_BUSYBOX_XARGS_SUPPORT_CONFIRMATION
		bool 'xargs: Enable support single and double quotes and backslash' CONFIG_USER_BUSYBOX_XARGS_SUPPORT_QUOTES
		bool 'xargs: Enable support options -x' CONFIG_USER_BUSYBOX_XARGS_SUPPORT_TERMOPT
		bool 'xargs: Enable options -0' CONFIG_USER_BUSYBOX_XARGS_SUPPORT_ZERO_TERM
	fi
	bool 'yes' CONFIG_USER_BUSYBOX_YES
	bool 'zip'	CONFIG_USER_BUSYBOX_ZIP
	
	# Global features go here
	comment "other features"
	bool 'buffers on stack' CONFIG_USER_BUSYBOX_BUFFERS_GO_ON_STACK
	bool 'buffers in BSS' CONFIG_USER_BUSYBOX_BUFFERS_GO_IN_BSS
	bool 'Use devps' CONFIG_USER_BUSYBOX_USE_DEVPS_PATCH
	bool 'Verbose usages' CONFIG_USER_BUSYBOX_VERBOSE_USAGE
	bool 'Auto Width' CONFIG_USER_BUSYBOX_AUTOWIDTH
	bool 'Silent boot' CONFIG_USER_BUSYBOX_EXTRA_QUIET
	bool 'Minix 2' CONFIG_USER_BUSYBOX_MINIX2
	if [ "$CONFIG_USER_BUSYBOX_ADDUSER" = "y" -o "$CONFIG_USER_BUSYBOX_DELUSER" = "y" -o "$CONFIG_USER_BUSYBOX_LOGIN" = "y" -o "$CONFIG_USER_BUSYBOX_SU" = "y" ]; then
		bool 'Support for shadow passwords' CONFIG_USER_BUSYBOX_SHADOWPASSWDS
	fi
	if [ "$CONFIG_USER_BUSYBOX_GETTY" = "y" -o "$CONFIG_USER_BUSYBOX_LOGIN" = "y" -o "$CONFIG_USER_BUSYBOX_SU" = "y" -o "$CONFIG_USER_BUSYBOX_WHO" = "y" -o "$CONFIG_USER_BUSYBOX_LAST" = "y" ]; then
		bool '  Support utmp and wtmp files' CONFIG_USER_BUSYBOX_U_W_TMP
	fi
	bool 'Use internal password and group functions rather than system functions' CONFIG_USER_BUSYBOX_USE_BB_PWD_GRP
	if [ "$CONFIG_USER_BUSYBOX_USE_BB_PWD_GRP" = "y" -a "$CONFIG_USER_BUSYBOX_SHADOWPASSWDS" = "y" ]; then
		bool '  Use busybox shadow password functions' CONFIG_USER_BUSYBOX_USE_BB_SHADOW
	fi
	bool 'Dmalloc' CONFIG_USER_BUSYBOX_DMALLOC
	bool 'Electric-fence' CONFIG_USER_BUSYBOX_EFENCE
	bool 'Allocate with Malloc' CONFIG_USER_BUSYBOX_BUFFERS_USE_MALLOC
	bool 'Support for devfs' CONFIG_USER_BUSYBOX_DEVFS
	bool 'Use the devpts filesystem for Unix98 PTYs' CONFIG_USER_BUSYBOX_DEVPTS
	bool 'Support for SUID/SGID handling' CONFIG_USER_BUSYBOX_SUID
	if [ "$CONFIG_USER_BUSYBOX_SUID" = "y" ]; then
		bool 'Runtime SUID/SGID configuration via /etc/busybox.conf' CONFIG_USER_BUSYBOX_SUID_CONFIG
	fi
	if [ "$CONFIG_USER_BUSYBOX_SUID_CONFIG" = "y" ]; then
		bool 'Suppress warning message if /etc/busybox.conf is not readable' CONFIG_USER_BUSYBOX_SUID_CONFIG_QUIET
	fi
	bool 'Build with Large File Support (for accessing files > 2 GB)' CONFIG_USER_BUSYBOX_LFS
	bool 'Support NSA Security Enhanced Linux' CONFIG_USER_BUSYBOX_SELINUX
	bool 'Build BusyBox as a static binary (no shared libs)' CONFIG_USER_BUSYBOX_STATIC
	if [ "$CONFIG_USER_BUSYBOX_CPIO" = "y" -o "$CONFIG_USER_BUSYBOX_TAR" = "y" ]; then
		bool '  Enable tape drive support' CONFIG_USER_BUSYBOX_UNARCHIVE_TAPE
	fi
	bool 'Enable IPv6 support' CONFIG_USER_BUSYBOX_IPV6
	# bool 'Enable --install' CONFIG_USER_BUSYBOX_INSTALLER
	bool 'Clean up' CONFIG_USER_BUSYBOX_CLEAN_UP
	bool 'Readable sizes' CONFIG_USER_BUSYBOX_HUMAN_READABLE
	bool 'Locale Support' CONFIG_USER_BUSYBOX_LOCALE_SUPPORT
fi
